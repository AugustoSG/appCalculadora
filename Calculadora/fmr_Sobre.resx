<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CYYSt6jdngAAAABJRU5ErkJggg==
</value>
  </data>
</root>